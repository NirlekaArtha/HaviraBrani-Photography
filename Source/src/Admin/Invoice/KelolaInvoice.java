/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin.Invoice;

import Admin.DashboardAdmin;
import Utill.DBConnection;
import Utill.MessageDialog;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nirleka
 */

public class KelolaInvoice extends javax.swing.JFrame {

    /**
     * Creates new form kelola_pegawai
     */
    private String ID_Invoice = "";
    
    public KelolaInvoice() {
        initComponents();
        tampilkanDataKeTabel();
        loadPilihanComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The contenResultSet cariPelanggan = DBConnection.getData("SELECT ID_Pelanggan FROM pelanggan WHERE Nama = " + pelanggan);t of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelInvoice = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSimpan = new javax.swing.JButton();
        btnPerbarui = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        inputJadwal = new javax.swing.JComboBox<>();
        inputBiayaLainnya = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID Jadwal", "Pelanggan", "Pegawai", "Paket", "Lokasi", "Jadwal Foto", "Tanggal Booking", "Harga", "Biaya Lainnya", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelInvoiceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelInvoice);

        btnKembali.setText("Kembali ke Dashboard");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Jadwal");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnPerbarui.setText("Perbarui");
        btnPerbarui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerbaruiActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPerbarui, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPerbarui, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel2.setText("Biaya Lainnya");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputJadwal, 0, 383, Short.MAX_VALUE)
                    .addComponent(inputBiayaLainnya))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(inputJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(inputBiayaLainnya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel4.setText("Daftar Invoice");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(btnKembali)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 991, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void pilihItemDenganAwalan(JComboBox<String> comboBox, char targetAwal) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            String item = comboBox.getItemAt(i);
            if (!item.isEmpty() && Character.toLowerCase(item.charAt(0)) == Character.toLowerCase(targetAwal)) {
                comboBox.setSelectedItem(item);
                break;
            }
        }
    }
    
    private void loadPilihanComboBox()
    {
        ResultSet dataJadwal = DBConnection.getData("SELECT ID_Jadwal FROM jadwal_foto");
        
        try
        {
            while( dataJadwal.next())
            {
                inputJadwal.addItem(dataJadwal.getString("ID_Jadwal"));
            }

        }catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
    }
    
    
    private void tabelInvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelInvoiceMouseClicked
        
        int selectedRow = tabelInvoice.getSelectedRow();
        this.ID_Invoice = String.valueOf(tabelInvoice.getValueAt(selectedRow, 0));
        inputJadwal.setSelectedItem(String.valueOf(tabelInvoice.getValueAt(selectedRow, 1)));
        inputBiayaLainnya.setText(String.valueOf(tabelInvoice.getValueAt(selectedRow, 9)));
        
    }//GEN-LAST:event_tabelInvoiceMouseClicked

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        new DashboardAdmin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if (MessageDialog.showConfirmDialog("Apakah anda yakin ingin menghapus data dengan ID: " + this.ID_Invoice + " ?"))
        {
            String query = "DELETE FROM invoice WHERE ID_Invoice = ?";
            int result = DBConnection.updateData(query, new Object[] {this.ID_Invoice});

            if (result >= 1)
            {
                MessageDialog.showSuccessMessage("Data berhasil dihapus, banyaknya data yang dihapus: " + result);
            }
            
            this.ID_Invoice = "";
            tampilkanDataKeTabel();
            inputJadwal.setSelectedIndex(0);
            inputBiayaLainnya.setText("0");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnPerbaruiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerbaruiActionPerformed
        String biayaLainnya = inputBiayaLainnya.getText();
        String ID_Jadwal = inputJadwal.getSelectedItem().toString();

        if (ID_Jadwal.isEmpty() ||
            biayaLainnya.isEmpty())
        {
            MessageDialog.showUserErrorMessage("Semua field harus diisi!");
            return;
        }
        
        int total = Integer.parseInt(biayaLainnya) + Integer.parseInt(String.valueOf(tabelInvoice.getValueAt(tabelInvoice.getSelectedRow(), 8)));
        
        String query = "UPDATE invoice SET ID_Jadwal = ?, Biaya_Lainnya = ?, Total = ? WHERE ID_Invoice = ? ";
        Object[] parameters = {ID_Jadwal, biayaLainnya, total, this.ID_Invoice};
        int result = DBConnection.updateData(query, parameters);

        if (result < 1)
        {
            return;
        }else
        {
            MessageDialog.showSuccessMessage("Data berhasil diubah, data yang diubah dengan ID: " + result);
        }

        tampilkanDataKeTabel();
        inputJadwal.setSelectedIndex(0);
        inputBiayaLainnya.setText("0");
    }//GEN-LAST:event_btnPerbaruiActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String ID_Jadwal = inputJadwal.getSelectedItem().toString().substring(0,1);
        int biayaLainnya = Integer.parseInt(inputBiayaLainnya.getText());

        if (ID_Jadwal.isEmpty() ||
            inputBiayaLainnya.getText().isEmpty())
        {
            MessageDialog.showUserErrorMessage("Semua field harus diisi!");
            return;
        }

        String query =  "SELECT jadwal_foto.*, " +
                        "paket.Harga AS Harga_Paket, paket.Nama AS Nama_Paket, " +
                        "paket.Deskripsi, paket.DP " +
                        "FROM jadwal_foto " +
                        "JOIN paket ON jadwal_foto.ID_Paket = paket.ID_Paket " +
                        "WHERE ID_Jadwal = " + ID_Jadwal;

        int total = 0;
        ResultSet hasil = DBConnection.getData(query);
        
        try
            
        {
            if (hasil.next())
            {
                total = biayaLainnya + hasil.getInt("Harga_Paket");
            }
        }catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
        
        query = "INSERT INTO invoice (ID_Jadwal, Biaya_Lainnya, Total) VALUES"
                + "(?, ?, ?)";
        Object[] parameters = {ID_Jadwal, biayaLainnya, total};
        
        int result = DBConnection.updateData(query, parameters);

        if (result < 1)
        {
            return;
        }else
        {
            MessageDialog.showSuccessMessage("Data berhasil ditambah, data yang ditambah: " + result);
        }

        tampilkanDataKeTabel();
        inputJadwal.setSelectedIndex(0);
        inputBiayaLainnya.setText("0");

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void tampilkanDataKeTabel()
    {
        try
        {
            String query = 
                "SELECT " +
                "invoice.*, " +
                "jf.ID_Jadwal, " +
                "p.Nama AS NamaPelanggan, " +
                "f.Nama AS NamaFotografer, " +
                "pk.Nama AS NamaPaket, " +
                "pk.Harga AS HargaPaket, " +
                "jf.Lokasi, " +
                "jf.Tanggal_Waktu, " +
                "jf.Tanggal_Booking " +
                "FROM invoice " +
                "JOIN jadwal_foto jf ON invoice.ID_Jadwal = jf.ID_Jadwal " +
                "LEFT JOIN pelanggan p ON jf.ID_Pelanggan = p.ID_Pelanggan " +
                "LEFT JOIN pegawai f ON jf.ID_Fotografer = f.ID_Pegawai " +
                "LEFT JOIN paket pk ON jf.ID_Paket = pk.ID_Paket";


            ResultSet result = DBConnection.getData(query);
            
//            String namaPelanggan = "", namaPaket = "", namaFotografer = ""; 

            DefaultTableModel model = (DefaultTableModel) tabelInvoice.getModel();
            model.setRowCount(0);

            while (result.next())
            {   
                
                model.addRow(new Object[] {
                    result.getString("ID_Invoice"),
                    result.getString("ID_Jadwal"),
                    result.getString("NamaPelanggan"),
                    result.getString("NamaFotografer"),
                    result.getString("NamaPaket"),
                    result.getString("Lokasi"),
                    result.getString("Tanggal_Waktu"),
                    result.getString("Tanggal_Booking"),
                    result.getString("HargaPaket"),
                    result.getString("Biaya_Lainnya"),
                    result.getString("Total")
                    
                });
            }
            
            
        } catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KelolaInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KelolaInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KelolaInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KelolaInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KelolaInvoice().setVisible(true);
               ;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnPerbarui;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JTextField inputBiayaLainnya;
    private javax.swing.JComboBox<String> inputJadwal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelInvoice;
    // End of variables declaration//GEN-END:variables
}
