/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin.JadwalFoto;

import Admin.DashboardAdmin;
import Utill.DBConnection;
import Utill.MessageDialog;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nirleka
 */

public class KelolaJadwalFoto extends javax.swing.JFrame {

    /**
     * Creates new form kelola_pegawai
     */
    private String ID_Jadwal = "";
    
    public KelolaJadwalFoto() {
        initComponents();
        tampilkanDataKeTabel();
        loadPilihanComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The contenResultSet cariPelanggan = DBConnection.getData("SELECT ID_Pelanggan FROM pelanggan WHERE Nama = " + pelanggan);t of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnKembali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSimpan = new javax.swing.JButton();
        btnPerbarui = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        inputFotografer = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputLokasi = new java.awt.TextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        inputTanggalFoto = new java.awt.TextField();
        pemilihTanggalFoto = new datechooser.beans.DateChooserPanel();
        inputPaket = new javax.swing.JComboBox<>();
        pemilihTanggalBooking = new datechooser.beans.DateChooserPanel();
        inputTanggalBooking = new java.awt.TextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputJamFoto = new javax.swing.JComboBox<>();
        inputMenitFoto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        inputPelanggan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnKembali.setText("Kembali ke Dashboard");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Pelanggan", "Pegawai", "Paket", "Lokasi", "Jadwal Foto", "Tanggal Booking"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        jLabel1.setText("Pelanggan");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnPerbarui.setText("Perbarui");
        btnPerbarui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerbaruiActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPerbarui, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPerbarui, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel2.setText("Fotografer");

        jLabel3.setText("Paket");

        jLabel4.setText("Lokasi");

        jLabel5.setText("Tanggal Foto");

        pemilihTanggalFoto.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                pemilihTanggalFotoOnSelectionChange(evt);
            }
        });

        pemilihTanggalBooking.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                pemilihTanggalBookingOnSelectionChange(evt);
            }
        });

        jLabel7.setText("Tanggal Booking");

        jLabel6.setText("Jam Foto");

        inputJamFoto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        inputMenitFoto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "10", "20", "30", "40", "50" }));

        jLabel8.setText(":");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputLokasi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputFotografer, 0, 383, Short.MAX_VALUE)
                            .addComponent(inputPaket, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(inputJamFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(inputMenitFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputPelanggan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(inputTanggalBooking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(156, 156, 156))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(pemilihTanggalBooking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pemilihTanggalFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputTanggalFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(40, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(inputPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputFotografer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(inputPaket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(inputLokasi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(inputJamFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inputMenitFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputTanggalFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pemilihTanggalFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(inputTanggalBooking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(pemilihTanggalBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKembali)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(340, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void pemilihTanggalFotoOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_pemilihTanggalFotoOnSelectionChange
        java.sql.Date tanggal = new java.sql.Date(pemilihTanggalFoto.getSelectedDate().getTimeInMillis());
        inputTanggalFoto.setText(String.valueOf(tanggal));
    }//GEN-LAST:event_pemilihTanggalFotoOnSelectionChange

    public void pilihItemDenganAwalan(JComboBox<String> comboBox, char targetAwal) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            String item = comboBox.getItemAt(i);
            if (!item.isEmpty() && Character.toLowerCase(item.charAt(0)) == Character.toLowerCase(targetAwal)) {
                comboBox.setSelectedItem(item);
                break;
            }
        }
    }
    
    private void loadPilihanComboBox()
    {
        ResultSet dataPelanggan = DBConnection.getData("SELECT ID_Pelanggan, Nama FROM pelanggan");
        ResultSet dataFotografer = DBConnection.getData("SELECT ID_Pegawai, Nama FROM pegawai WHERE Jabatan LIKE 'fotografer'");
        ResultSet dataPaket = DBConnection.getData("SELECT ID_Paket, Nama FROM paket");
        
        try
        {
            while( dataPelanggan.next())
            {
                inputPelanggan.addItem(dataPelanggan.getString("ID_Pelanggan") + " - " + dataPelanggan.getString("Nama"));
            }

            while( dataFotografer.next())
            {
                inputFotografer.addItem(dataFotografer.getString("ID_Pegawai") + " - " + dataFotografer.getString("Nama"));
            }
                
            while(dataPaket.next())
            {
                inputPaket.addItem(dataPaket.getString("ID_Paket") + " - " + dataPaket.getString("Nama"));

            }
        }catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
    }
    
    
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String ID_Pelanggan = inputPelanggan.getSelectedItem().toString().substring(0,1);
        String ID_Fotografer = inputFotografer.getSelectedItem().toString().substring(0,1);
        String ID_Paket = inputPaket.getSelectedItem().toString().substring(0,1);
        String lokasi = inputLokasi.getText();
        String waktuFoto  = inputJamFoto.getSelectedItem().toString() + ":" + inputMenitFoto.getSelectedItem().toString() + ":00";
        String tanggalFoto = inputTanggalFoto.getText();
        String tanggalWaktuFoto = tanggalFoto + " " + waktuFoto;
        String tanggalBooking = inputTanggalBooking.getText();
        
        if (ID_Pelanggan.isEmpty() ||
            ID_Fotografer.isEmpty() ||
            ID_Paket.isEmpty() ||
            lokasi.isEmpty() ||
            waktuFoto.isEmpty() ||
            tanggalFoto.isEmpty() ||
            tanggalBooking.isEmpty())
        {
            MessageDialog.showUserErrorMessage("Semua field harus diisi!");
            return;
        }
        
        
        String query = "INSERT INTO jadwal_foto (ID_Pelanggan, ID_Fotografer, ID_Paket, Lokasi, Tanggal_Waktu, Tanggal_Booking) VALUES"
                        + "(?, ?, ?, ?, ?, ?)";
        Object[] parameters = {ID_Pelanggan, ID_Fotografer,ID_Paket, lokasi, tanggalWaktuFoto, tanggalBooking};
        int result = DBConnection.updateData(query, parameters);
        
        if (result < 1)
        {
            return;
        }else 
        {
            MessageDialog.showSuccessMessage("Data berhasil ditambah, data yang ditambah: " + result);            
        }
        
        tampilkanDataKeTabel();
        inputPelanggan.setSelectedIndex(0);
        inputFotografer.setSelectedIndex(0);
        inputPaket.setSelectedIndex(0);
        inputLokasi.setText("");
        inputJamFoto.setSelectedIndex(0);
        inputMenitFoto.setSelectedIndex(0);
        inputTanggalFoto.setText("");
        inputTanggalBooking.setText("");
        
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        
        int selectedRow = tabel.getSelectedRow();
        this.ID_Jadwal = String.valueOf(tabel.getValueAt(selectedRow, 0));
        
        String query ="SELECT * FROM jadwal_foto WHERE ID_Jadwal = ?";
        Object[] parameters = {ID_Jadwal};
        ResultSet result = DBConnection.getData(query, parameters);
        
        try
        {
            if (result.next())
            {
                String tanggalWaktu = result.getString("Tanggal_Waktu");
                pilihItemDenganAwalan(inputPelanggan, result.getString("ID_Pelanggan").charAt(0));
                pilihItemDenganAwalan(inputPaket, result.getString("ID_Paket").charAt(0));
                pilihItemDenganAwalan(inputFotografer, result.getString("ID_Fotografer").charAt(0));
                inputLokasi.setText(result.getString("Lokasi"));
                inputJamFoto.setSelectedItem(tanggalWaktu.substring(11,13));
                inputMenitFoto.setSelectedItem(tanggalWaktu.substring(14,16));
                inputTanggalFoto.setText(tanggalWaktu.substring(0,10));
                inputTanggalBooking.setText(result.getString("Tanggal_Booking"));
            }
        }catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
        
    }//GEN-LAST:event_tabelMouseClicked

    private void btnPerbaruiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerbaruiActionPerformed
        String ID_Pelanggan = inputPelanggan.getSelectedItem().toString().substring(0,1);
        String ID_Fotografer = inputFotografer.getSelectedItem().toString().substring(0,1);
        String ID_Paket = inputPaket.getSelectedItem().toString().substring(0,1);
        String lokasi = inputLokasi.getText();
        String waktuFoto  = inputJamFoto.getSelectedItem().toString() + ":" + inputMenitFoto.getSelectedItem().toString() + ":00";
        String tanggalFoto = inputTanggalFoto.getText();
        String tanggalWaktuFoto = tanggalFoto + " " + waktuFoto;
        String tanggalBooking = inputTanggalBooking.getText();
        
        if (ID_Pelanggan.isEmpty() ||
            ID_Fotografer.isEmpty() ||
            ID_Paket.isEmpty() ||
            lokasi.isEmpty() ||
            waktuFoto.isEmpty() ||
            tanggalFoto.isEmpty() ||
            tanggalBooking.isEmpty())
        {
            MessageDialog.showUserErrorMessage("Semua field harus diisi!");
            return;
        }
        
        
        String query = "UPDATE jadwal_foto SET ID_Pelanggan = ? , ID_Fotografer = ? , "
                     + "ID_Paket = ? , Lokasi = ?, Tanggal_Waktu = ?, Tanggal_Booking = ? WHERE ID_Jadwal = ?";
        Object[] parameters = {ID_Pelanggan, ID_Fotografer,ID_Paket, lokasi, tanggalWaktuFoto, tanggalBooking, this.ID_Jadwal};
        int result = DBConnection.updateData(query, parameters);
        
        if (result < 1)
        {
            return;
        }else 
        {
            MessageDialog.showSuccessMessage("Data berhasil diubah, data yang diubah dengan ID: " + result);            
        }
        
        tampilkanDataKeTabel();
        inputPelanggan.setSelectedIndex(0);
        inputFotografer.setSelectedIndex(0);
        inputPaket.setSelectedIndex(0);
        inputLokasi.setText("");
        inputJamFoto.setSelectedIndex(0);
        inputMenitFoto.setSelectedIndex(0);
        inputTanggalFoto.setText("");
        inputTanggalBooking.setText("");
    }//GEN-LAST:event_btnPerbaruiActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if (MessageDialog.showConfirmDialog("Apakah anda yakin ingin menghapus data dengan ID: " + this.ID_Jadwal + " ?"))
        {
            String query = "DELETE FROM jadwal_foto WHERE ID_Jadwal = ?";
            int result = DBConnection.updateData(query, new Object[] {this.ID_Jadwal});
            
            if (result >= 1)
            {
                MessageDialog.showSuccessMessage("Data berhasil dihapus, banyaknya data yang dihapus: " + result);
            }
            
            tabel.clearSelection();
            this.ID_Jadwal = "";
            tampilkanDataKeTabel();
                    inputPelanggan.setSelectedIndex(0);
        inputFotografer.setSelectedIndex(0);
        inputPaket.setSelectedIndex(0);
        inputLokasi.setText("");
        inputJamFoto.setSelectedIndex(0);
        inputMenitFoto.setSelectedIndex(0);
        inputTanggalFoto.setText("");
        inputTanggalBooking.setText("");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        new DashboardAdmin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void pemilihTanggalBookingOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_pemilihTanggalBookingOnSelectionChange
        java.sql.Date tanggal = new java.sql.Date(pemilihTanggalBooking.getSelectedDate().getTimeInMillis());
        inputTanggalBooking.setText(String.valueOf(tanggal));
    }//GEN-LAST:event_pemilihTanggalBookingOnSelectionChange

    private void tampilkanDataKeTabel()
    {
        try
        {
            String query = "SELECT " +
                           "jf.ID_Jadwal, " +
                           "p.Nama AS NamaPelanggan, " +
                           "f.Nama AS NamaFotografer, " +
                           "pk.Nama AS NamaPaket, " +
                           "jf.Lokasi, " +
                           "jf.Tanggal_Waktu, " +
                           "jf.Tanggal_Booking " +
                           "FROM jadwal_foto jf " +
                           "LEFT JOIN pelanggan p ON jf.ID_Pelanggan = p.ID_Pelanggan " +
                           "LEFT JOIN pegawai f ON jf.ID_Fotografer = f.ID_Pegawai " +
                           "LEFT JOIN paket pk ON jf.ID_Paket = pk.ID_Paket";

            ResultSet result = DBConnection.getData(query);
            
//            String namaPelanggan = "", namaPaket = "", namaFotografer = ""; 

            DefaultTableModel model = (DefaultTableModel) tabel.getModel();
            model.setRowCount(0);

            while (result.next())
            {
                System.out.println("tes");
//                ResultSet cariPelanggan = DBConnection.getData("SELECT * FROM pelanggan WHERE ID_Pelanggan=" + result.getString("ID_Pelanggan"));
//                ResultSet cariFotografer = DBConnection.getData("SELECT * FROM pegawai WHERE ID_Pegawai=" + result.getString("ID_Fotografer"));
//                ResultSet cariPaket = DBConnection.getData("SELECT * FROM paket WHERE ID_Paket=" + result.getString("ID_Paket"));
//                
//                if (cariPelanggan.next() &&
//                    cariFotografer.next() &&
//                    cariPaket.next())
//                {
//                    namaPelanggan = cariPelanggan.getString("Nama");
//                    namaFotografer = cariFotografer.getString("Nama");
//                    namaPaket = cariPaket.getString("Nama");
//                   
//                }else
//                {
//                    System.out.println("Lho hee" + result.getString("ID_Pelanggan"));
//                }
                
                
                model.addRow(new Object[] {
                    result.getString("ID_Jadwal"),
                    result.getString("NamaPelanggan"),
                    result.getString("NamaFotografer"),
                    result.getString("NamaPaket"),
                    result.getString("Lokasi"),
                    result.getString("Tanggal_Waktu"),
                    result.getString("Tanggal_Booking")
                });
            }
        } catch (SQLException e)
        {
            MessageDialog.showProgramErrorMessage(e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KelolaJadwalFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KelolaJadwalFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KelolaJadwalFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KelolaJadwalFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KelolaJadwalFoto().setVisible(true);
               ;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnPerbarui;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> inputFotografer;
    private javax.swing.JComboBox<String> inputJamFoto;
    private java.awt.TextField inputLokasi;
    private javax.swing.JComboBox<String> inputMenitFoto;
    private javax.swing.JComboBox<String> inputPaket;
    private javax.swing.JComboBox<String> inputPelanggan;
    private java.awt.TextField inputTanggalBooking;
    private java.awt.TextField inputTanggalFoto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private datechooser.beans.DateChooserPanel pemilihTanggalBooking;
    private datechooser.beans.DateChooserPanel pemilihTanggalFoto;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
